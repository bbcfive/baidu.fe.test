html{
    margin: 0;
    width: 100%;
    height: 100%;		
}

body{
	font-family: Times;
	display: flex;	
	margin: 0;
    width: 100%;
    height: 100%;
}

/*下面这段滚动条代码：全场最佳*/
.overflowHide {
    overflow: scroll;
     /*隐藏滚动条，当IE下溢出，仍然可以滚动*/
    -ms-overflow-style: none;
    /*火狐下隐藏滚动条*/
    overflow: -moz-scrollbars-none;
}

/*chrome下隐藏滚动条*/
.overflowHide::-webkit-scrollbar {
    display: none;
}

/*
	开发笔记1：在左侧边栏开发过程中，为了达到“自适应浏览器”要求，设置height为100%。
	但这时左侧栏的高度就被内部元素给撑起来了，无法达到流余的目的。
	于是设了一个padding-bottom，但存在问题：缩小页面时，处于padding外的元素不显示。
	为了解决此问题，并尽可能的符合原高度，于是给了左侧栏一个height值，然后用position完成。
	但不一定就能达到适应不同浏览器的要求，还要再学习实践和检验。
*/
/*
	开发笔记2：box-shadow设置后会显得鼓起来。
	（属性值：水平阴影，垂直阴影，模糊距离，阴影尺寸，颜色，外部or内部阴影!inset。）
	img元素float时，一般会默认浮在右边元素那一行上。除非有明显的层级关系。
	-webkit-是个什么神器？？？为啥渐变遇到它就正常了？？！！！
	直接写在html的style权重大于css里的权重。
	以及，搜索框小放大镜那里是亮点(search-line)。
*/

.left img,a{
	text-decoration: none; 
	color: inherit;
}

.left{
	height: 100%; 
	width: 25%; 
	position: relative;
	color: #fff;
	display: flex;
}

.out-icon{
	width: 25%; 
	background-color: rgb(29,38,52);
	height: 100%;
}
.out-icon img{
	display: block;
	width: 15mm;
	height: 15mm;
	margin: 0 auto;
	padding-top: 20px; 
}

/*（解释见前言）这个绝对定位的bottom和前面的padding-bottom真绝了！*/
.out-icon img:nth-last-of-type(2){
	width: 5mm;
	height: 4mm;
	position: absolute;
	bottom: 5mm;
	left: 10px;
}
.out-icon img:nth-last-of-type(1){
	width: 4mm;
	height: 4mm;
	position: absolute;
	bottom: 5mm;
	left: 50px;
}
 /*padding顺序：上右下左*/
.in-menu{
	font-size: 1em;
	width: 60mm;
	padding: 0 10px 0 25px; 
	background-color: rgb(35,46,63);
}
/*父元素padding容易造成整体莫名其妙多出一截，可以用子元素的padding-top和margin-top*/
.MENU{
	margin-top: 10mm;
}
.in-menu #num{ 
	width: 9mm;
	height: 7mm;
	float: right;
	text-align: center;
	line-height: 7mm;
	color: #fff;
	border-radius: 15px;
	box-shadow: 0 3px 4px rgba(0,0,0,.2);
	background: -webkit-linear-gradient(top,rgb(40,160,247),rgb(26,146,237));
}
.in-menu #mark{ 
	width: 7mm;
	height: 7mm;
	float: right;
	text-align: center;
	line-height: 7mm;
	color: #fff;
	font-size: 6px;
	border-radius: 15px;
	box-shadow: 0 3px 4px rgba(0,0,0,.2);
	background: -webkit-linear-gradient(top,rgb(242,82,53),rgb(205,41,12));
}
.in-menu #product{
	float: left;
	margin-right: 10px;
}
.in-menu #set{
	float: right;
}

.MENU, .YOUR-PRODUCTS{
	border-bottom: rgb(91,103,121) 1px solid;
}

.MENU, .YOUR-PRODUCTS, .DASHBOARD{
	color: rgb(183,192,205);
}
.MENU a:first-of-type, .YOUR-PRODUCTS a:first-of-type, .DASHBOARD a:first-of-type{
	color: rgb(91,103,121);
}

/*
	绝对定位前面一定要设置一个相对定位,子绝对定位相对于其父相对定位。提问：如果父元素也是绝对定位呢？好像也是相对于父元素。
	所以解决此问题时只需要加一层嵌套关系就好了，把参照元素设为父元素，OK！
	只是注意：定位值top、bottom、left、right两两搭配使用可以，混合用就不好使了（因为不了解元素的边界），务必注意！！
*/

.footer{
	position: absolute;
	height: 13mm;
	width: 60mm;
	font-size: 1em;	
	bottom: 0;
	left: 25%;
	margin: 0;
	text-align: center;
	background-color: rgb(35,46,63);
}
.footer p{
	display: inline;

}
#long{
	width: 50mm;
	height: 1mm;
	margin: 0 auto;
	margin-top:10px; 
	position: relative;
	border-radius: 15px;
	background-color: rgb(45,56,72);
}
#short{
	width: 13mm;
	height: 1mm;
	position: absolute;
	bottom:0;
	left: 0;
	border-radius: 15px;
	background: -webkit-linear-gradient(left,rgb(128,94,230),rgb(156,140,228));
}

.right{
	display: flex;
	flex-wrap: wrap;
	width: 75%;
	height: 100%;
}
.top-bar{
	position: fixed;
	height: 80px;
	width: 100%;
	border-bottom: rgb(230,233,236) 1px solid;
	background-color: #fff;
	z-index: 1;
}
header h2{
	margin: 30px 0 0 30px; 
}
header #profio{
	width: 50mm;
	position: absolute;	
	top: 3mm;
	right: 30%;	
}
header img{
	position: relative;	
}
header #name{
	position: absolute;
	top: -3mm;
	left: 18mm;
	font-size: 20px;
	color: rgb(35,153,241);
}
header #position{
	font-size: 15px;
	position: absolute;
	top: 5mm;
	left: 18mm;
	color: rgb(181,181,181);
}

.content{
	width: 100%;
	height: 100%;
	display: flex;
	flex-wrap: nowrap;
	position: relative;
	overflow: hidden;
}
.name-list{
	width: 33.33%;
	top: 81px;
	position: relative;
	border-right: rgb(230,233,236) 1px solid;
}
.search{
	height: 70px;
	display: flex;
	border-bottom: rgb(229,232,238) 1px solid;
}
.search-line{
	margin: 0 auto;
	line-height: 70px;
	width: 70mm;
	position: relative;	
}
#search{
	height: 30px;
	width: 70mm;
	border: rgb(229,232,238) 1px solid;
}
#search-pic{
	position: absolute;
	top: 25px;
	right: 5px;
}
.person-list{
	padding-bottom: 81px;/*只要你想，没有什么是你做不到的！*/
}
.person-list div{
	border-bottom: rgb(229,232,238) 1px solid;
	padding-top: 20px;
}
.person-list div:nth-child(1){
	border-left: rgb(35,153,241) 2px solid;
}
/*如何用CSS缩小两个<p></p>之间的距离：
p元素之间是有1.12em的margin，你在最前面做一下统一定义就行了啊。
加上一句:p{margin: 0.5em 0;}*/
.person-list p{
	margin: 0.5em 0;
	color: rgb(88,93,104);
}
.person-list p:nth-child(2){
	float: right;
	margin-right: 20px;
	color: rgb(181,181,181);	
}
.person-list #first-name{
	color: rgb(35,153,241);
	display: inline;
}
/*这是一个新的知识点！！！用伪元素作圆形*/
.person-list #first-name:before {
	content: '';
	display: inline-block;
	width: 2mm;
	height: 2mm;
	background-color: rgb(35,153,241);
	border-radius: 50%;
	margin: 0 0.6em;
}
.person-list p:nth-child(4){
	color: rgb(181,181,181);
}
.person-list p:nth-child(5){
	margin-left: 1em;
	margin-top: 1em; 
}
.person-list img{
	float: left;
	margin-left: 20px;	
	margin-right: 20px;	
}
.person-list #number{
	width: 8mm;
	height: 6mm;
	float: right;
	padding-top: 0;	
	margin-top: 20px;	
	text-align: center;
	line-height: 6mm;
	color: #fff;
	border-radius: 15px;
	margin-right: 10px;
	background: -webkit-linear-gradient(top,rgb(40,160,247),rgb(26,146,237));	
}

.chatbody{
	width: 66.66%;
	height: 80%;/*此处高度越小，scroll越能起作用；可以取不同值试试。*/
	color: #fff;
	position: relative;
	top: 0;
	padding-bottom: 81px;/*与top: 81px;对冲，保证完整性*/
}
.name-bar{
	height: 50px;
	width: 100%;
	position: relative;
	top: 81px;/*为什么这里是65而非81px？原因：规定了高度为70px;后面的元素撑起了盒子底部，于是把整体往下拉了。*/	
	color: rgb(88,93,104);
	border-bottom: rgb(230,233,236) 1px solid;
	overflow: hidden;/*加了overflow之后，被撑起的那部分元素不起作用了。于是就是81px了*/	
	padding-top: 20px;  /*20px+50px=70px*/
}
.chatbody #berry:after {
	content: '';
	display: inline-block;  /*行内块元素才会显示~inline显示不出，因为需要其他元素撑起来*/
	background-color: rgb(27,185,52);
	width: 2mm;
	height: 2mm;
	border-radius: 50%;
	margin: 0 0.6em;
}
.chatbody #berry{
	display: inline;
	margin-left: 20px;
	padding-top: 20px;
	font-size: 1.2em;
}
.pages{	
	float: right;
	width: 50%;
	overflow: hidden;
}
.pages img:nth-child(1){
	float: left;
	margin-right: 20px;
}
.pages p{
	float: left;	
	margin-right: 20px;
	padding-left: 25px;
	border-left: rgb(179,179,179) 2px solid; 
}

.chatting{
	color: rgb(88,93,104);
	position: relative;
	top: 100px;
}
.Tuesday:before {
	content: 'Tuesday';
	position: absolute;
	top: 47%;
	left: 48%;
	background: #fff;
	padding: 0 10px;
}
.New-Messages:before {
	content: 'New Messages';
	position: absolute;
	top: 86.5%;
	left: 45%;
	color: #2399f1;
	background: #fff;
	padding: 0 10px;
}
.add{
	position: absolute;	
	background-color: #fff;
	width: 66.66%;
	height: 70px;
	bottom: 0;
	right: 0;
}
.plus{
	border: rgb(206,208,218) 1px solid; 
	display: flex;
	width: 90%;
	margin: 14px auto;
	height: 60%;	
	border-radius: 5px;
}
/*line-height这个垂直居中属性只能写实际数字，不能写比例*/
.add #add{
	margin: 0;
	padding: 0;  	
	width: 7%;
	height: 42px;
	color: grey;
	font-size: 1.3em;
	background: -webkit-linear-gradient(top,rgb(254,254,255),rgb(243,245,248));
	text-align: center;
	line-height: 42px;
	border-right: rgb(206,208,218) 1px solid; 
}
.add input{
	margin: 0;
	padding: 0;  
	width: 93%;
	border: none;
	text-decoration: none;
	cursor: text;
}
.chatting img{
	float: left;
}
.chatting span:nth-child(2){
	color: #585d68;
	font-size: 16px;
}
.chatting span:nth-child(3){
	margin-left: 1em;
	color: #7f8fa4;
	font-size: 14px;
}
.chatting div>div>div{
	margin: 1.5%;
	display: table;
}
.chatting div>div{
	margin-bottom: 1.5em;
	margin-left: 1em;
}
.Tuesday{
	border-top: rgb(229,232,238) 1px solid;
	padding-top:15px; 
}
.New-Messages{
	border-top: #2399f1 1px solid;
	padding-top:15px; 
}
